
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - ExpressBox</title>

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.css" />

    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
    <script src="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.js"></script>

    <style>
        /* Ajuste la altura del carrusel según sus necesidades */
        #expressBoxCarousel {
            max-height: 400px; /* Establece una altura fija */
            margin: 0 auto; /* Centra el carrusel horizontalmente */
            overflow: hidden; /* Oculta el desbordamiento de imágenes */
            position: relative; /* Permite posicionar el texto sobre la imagen */
        }

        /* Establece la altura de las imágenes dentro del carrusel */
        #expressBoxCarousel img {
            height: 100%; /* Ocupa el 100% de la altura del contenedor */
            width: auto; /* Ajusta automáticamente el ancho según la altura */
            object-fit: cover; /* Mantiene la relación de aspecto y cubre el contenedor */
        }

        /* Estilo para el texto superpuesto */
        .carousel-caption {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-46%, -110%);
            color: white;
            text-align: center;
        }

        .info-box address .address-line {
            margin-bottom: 5px;
        }

        .whatsapp-button {
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 1000;
            background: none; /* Elimina el fondo del botón para que solo se muestre el icono */
            border: none; /* Elimina el borde */
        }

        .whatsapp-button img {
            width: 80px; /* Ajusta el ancho del icono según sea necesario */
            height: auto; /* Mantiene la proporción del icono */
            margin-right: 10px; /* Añade espacio entre el icono y el texto si decides agregarlo más adelante */
        }

        /* Estilo para ajustar la imagen a un tamaño específico y colocarla a la izquierda */
        .section-image img {
            width: 100%; /* Ajusta el ancho de la imagen según sea necesario */
            height: auto; /* Mantiene la proporción de la imagen */
            float: left; /* Coloca la imagen a la izquierda */
            margin-right: 20px; /* Añade espacio entre la imagen y el texto */
        }

        /* Estilo para el texto y el botón a la derecha de la imagen */
        .section-text {
            overflow: hidden; /* Evita que el texto flote alrededor de la imagen */
        }

        .section-button {
            display: inline-block;
            padding: 10px 20px;
            background-color: #007BFF;
            color: #fff;
            text-decoration: none;
            border-radius: 5px;
        }
    </style>

    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

</head>

<body>
    <style>
        body {
            margin: 0;
            padding: 0;
        }
    </style>

    <nav class="navbar navbar-light navbar-dark bg-dark">

        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav mr-auto">
                @if (Request.IsAuthenticated)
                {
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Principales
                        </a>
                        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                            @Html.ActionLink("Paquetes", "Index", "Package", new { area = "" }, new { @class = "dropdown-item" })
                            @Html.ActionLink("Envíos", "Index", "Delivery", new { area = "" }, new { @class = "dropdown-item" })
                            @Html.ActionLink("Historial Paquetes", "Index", "PackageHistory", new { area = "" }, new { @class = "dropdown-item" })
                        </div>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" id="navbarDropdownSecondary" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Entidades Secundarias
                        </a>
                        <div class="dropdown-menu" aria-labelledby="navbarDropdownSecondary">
                            @Html.ActionLink("Departamentos", "Index", "Department", new { area = "" }, new { @class = "dropdown-item" })
                            @Html.ActionLink("Municipios", "Index", "City", new { area = "" }, new { @class = "dropdown-item" })
                            @Html.ActionLink("Tipos Documento", "Index", "DocumentType", new { area = "" }, new { @class = "dropdown-item" })
                            @Html.ActionLink("Personas", "Index", "Person", new { area = "" }, new { @class = "dropdown-item" })
                            @Html.ActionLink("Oficinas", "Index", "Office", new { area = "" }, new { @class = "dropdown-item" })
                            @Html.ActionLink("Bodegas", "Index", "Warehouse", new { area = "" }, new { @class = "dropdown-item" })
                            @Html.ActionLink("Direcciones", "Index", "Address", new { area = "" }, new { @class = "dropdown-item" })
                            @Html.ActionLink("Estados envío", "Index", "DeliveryStatus", new { area = "" }, new { @class = "dropdown-item" })
                            @Html.ActionLink("Tipos Transporte", "Index", "TransportType", new { area = "" }, new { @class = "dropdown-item" })
                            @Html.ActionLink("Vehiculos", "Index", "Vehicle", new { area = "" }, new { @class = "dropdown-item" })
                        </div>
                    </li>
                    @Html.ActionLink("Rutas", "Route", "Home", new { area = "" }, new { @class = "nav-link" })
                 }
            </ul>
            @Html.Partial("_LoginPartial")
        </div>
        @Html.ActionLink("ExpressBox", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
    </nav>

    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - ExpressBox. Todos los derechos reservados</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
</body>
</html>